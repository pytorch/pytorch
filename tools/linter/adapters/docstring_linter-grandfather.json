{
  "torch/_inductor/autoheuristic/artifacts/_MMRankingA100.py": {
    "class MMRankingA100": 279,
    "def MMRankingA100.fill_choices()": 199
  },
  "torch/_inductor/autoheuristic/artifacts/_MMRankingH100.py": {
    "class MMRankingH100": 304,
    "def MMRankingH100.fill_choices()": 203
  },
  "torch/_inductor/autoheuristic/artifacts/_MixedMMA100.py": {
    "class MixedMMA100": 133,
    "def MixedMMA100.get_best_choices()": 85
  },
  "torch/_inductor/autoheuristic/artifacts/_MixedMMH100.py": {
    "class MixedMMH100": 132,
    "def MixedMMH100.get_best_choices()": 85
  },
  "torch/_inductor/bounds.py": {
    "class ValueRangeAnalysis": 107
  },
  "torch/_inductor/codecache.py": {
    "class CppPythonBindingsCodeCache": 179,
    "class HalideCodeCache": 357,
    "class PyCodeCache": 102
  },
  "torch/_inductor/codegen/common.py": {
    "class CSE": 167,
    "class CSEProxy": 316,
    "class Kernel": 286,
    "class KernelArgs": 332,
    "class OpOverrides": 198
  },
  "torch/_inductor/codegen/cpp.py": {
    "class CppKernelProxy": 617,
    "class CppOverrides": 429,
    "class CppScheduling": 786,
    "class CppVecKernel": 865,
    "class OuterLoopFusedSchedulerNode": 159,
    "def CppKernel.codegen_loops_impl()": 144,
    "def CppKernelProxy.codegen_functions()": 183,
    "def CppKernelProxy.legalize_lowp_fp_dtype_loopbody()": 224,
    "def CppScheduling.fuse()": 81,
    "def CppVecKernel.reduction_combine_vec()": 100,
    "def OuterLoopFusedSchedulerNode.check_outer_fusion_loop_level_attr()": 85,
    "def TilingSelect.select_tiling()": 170
  },
  "torch/_inductor/codegen/cpp_flex_attention_template.py": {
    "class CppFlexAttentionTemplate": 403,
    "def CppFlexAttentionTemplate.modification()": 102
  },
  "torch/_inductor/codegen/cpp_gemm_template.py": {
    "def CppGemmTemplate.get_options()": 249
  },
  "torch/_inductor/codegen/cpp_grouped_gemm_template.py": {
    "def CppGroupedGemmTemplate.add_choices()": 154,
    "def CppGroupedGemmTemplate.render()": 153
  },
  "torch/_inductor/codegen/cpp_template.py": {
    "class CppTemplate": 114
  },
  "torch/_inductor/codegen/cpp_template_kernel.py": {
    "class CppTemplateKernel": 499,
    "def CppTemplateKernel.store_outputs()": 111
  },
  "torch/_inductor/codegen/cpp_utils.py": {
    "def create_epilogue_with_attr()": 165
  },
  "torch/_inductor/codegen/cpp_wrapper_cpu_array_ref.py": {
    "def CppWrapperCpuArrayRef.generate_return()": 128,
    "def CppWrapperCpuArrayRef.write_wrapper_decl()": 208
  },
  "torch/_inductor/codegen/cuda/gemm_template.py": {
    "class CUTLASS2xGemmTemplate": 267
  },
  "torch/_inductor/codegen/debug_utils.py": {
    "class DebugPrinterManager": 229
  },
  "torch/_inductor/codegen/halide.py": {
    "class HalideKernel": 984,
    "class HalideOverrides": 325,
    "class HalidePrinter": 129,
    "def HalideKernel.halide_kernel_meta()": 82,
    "def HalideKernel.scan()": 82
  },
  "torch/_inductor/codegen/rocm/ck_conv_template.py": {
    "class CKGroupedConvFwdTemplate": 544,
    "def CKGroupedConvFwdTemplate.globals()": 145
  },
  "torch/_inductor/codegen/rocm/ck_universal_gemm_template.py": {
    "class CKGemmTemplate": 950
  },
  "torch/_inductor/codegen/rocm/rocm_benchmark_request.py": {
    "class ROCmBenchmarkRequest": 117
  },
  "torch/_inductor/codegen/simd.py": {
    "def SIMDScheduling.candidate_tilings()": 126,
    "def SIMDScheduling.generate_node_schedule()": 95
  },
  "torch/_inductor/codegen/triton.py": {
    "class TritonKernel": 2562,
    "class TritonOverrides": 469,
    "class TritonPrinter": 172,
    "class TritonScheduling": 396,
    "def TritonKernel.codegen_kernel()": 233,
    "def TritonKernel.codegen_kernel_benchmark()": 89,
    "def TritonKernel.load()": 145,
    "def TritonKernel.reduction()": 396,
    "def TritonKernel.scan()": 110,
    "def TritonScheduling.benchmark_codegened_module()": 85,
    "def TritonScheduling.benchmark_combo_kernel()": 91
  },
  "torch/_inductor/codegen/triton_combo_kernel.py": {
    "class ComboKernel": 808,
    "def ComboKernel.codegen_kernel_benchmark()": 89
  },
  "torch/_inductor/codegen/triton_split_scan.py": {
    "def TritonSplitScanKernel.scan()": 114
  },
  "torch/_inductor/codegen/wrapper.py": {
    "def PythonWrapperCodegen.benchmark_compiled_module()": 92,
    "def PythonWrapperCodegen.define_user_defined_triton_kernel()": 266,
    "def PythonWrapperCodegen.generate_example_arg_value()": 84,
    "def user_defined_kernel_grid_fn_code()": 102
  },
  "torch/_inductor/comm_lowering.py": {
    "def register_comm_lowerings()": 192
  },
  "torch/_inductor/comms.py": {
    "def enforce_comm_ordering_for_fsdp()": 174,
    "def reinplace_fsdp_all_gather()": 106
  },
  "torch/_inductor/compile_fx.py": {
    "def fw_compiler_freezing()": 101
  },
  "torch/_inductor/constant_folding.py": {
    "class ConstantFolder": 226,
    "def ConstantFolder.run_node()": 94
  },
  "torch/_inductor/cpu_vec_isa.py": {
    "class VecISA": 125
  },
  "torch/_inductor/debug.py": {
    "class DebugContext": 155,
    "class DebugFormatter": 172,
    "def DebugFormatter.log_autotuning_results()": 90,
    "def aot_inductor_minifier_wrapper()": 81
  },
  "torch/_inductor/dependencies.py": {
    "class MemoryDep": 234
  },
  "torch/_inductor/fx_passes/b2b_gemm.py": {
    "def b2b_gemm_handler()": 182
  },
  "torch/_inductor/fx_passes/binary_folding.py": {
    "def binary_folding_init()": 416
  },
  "torch/_inductor/fx_passes/group_batch_fusion.py": {
    "def BatchLayernormFusion.fuse()": 131,
    "def PostGradBatchLinearFusion.fuse()": 83,
    "def PreGradBatchLinearFusion.fuse()": 87
  },
  "torch/_inductor/fx_passes/joint_graph.py": {
    "def constant_fold_uniform_value()": 109,
    "def remove_no_ops()": 97
  },
  "torch/_inductor/fx_passes/micro_pipeline_tp.py": {
    "def find_all_gather_patterns()": 116,
    "def find_reduce_scatter_patterns()": 125
  },
  "torch/_inductor/fx_passes/split_cat.py": {
    "def SplitCatSimplifier.replace_cat()": 152,
    "def merge_getitem_cat()": 97,
    "def merge_split_cat_aten()": 91,
    "def move_reshape_out_of_split_stack()": 110
  },
  "torch/_inductor/graph.py": {
    "class GraphLowering": 2144,
    "def GraphLowering.call_function()": 112,
    "def GraphLowering.create_deferred_runtime_asserts()": 84,
    "def GraphLowering.extract_autotune_inputs()": 93,
    "def GraphLowering.output()": 92,
    "def GraphLowering.placeholder()": 102,
    "def GraphLowering.run_node()": 361
  },
  "torch/_inductor/ir.py": {
    "class Buffer": 131,
    "class ComputedBuffer": 350,
    "class Conditional": 144,
    "class ExternKernel": 866,
    "class Layout": 214,
    "class Loops": 130,
    "class Reduction": 745,
    "class Scan": 199,
    "class Sort": 151,
    "class UserDefinedTritonKernel": 198,
    "class View": 180,
    "class WelfordReduction": 221,
    "class WhileLoop": 212,
    "def ConcatKernel.create()": 101,
    "def ExternKernel.process_kernel()": 120,
    "def ExternKernel.require_strides()": 162,
    "def Reduction.create()": 159,
    "def Reduction.num_splits()": 161,
    "def Scan.create()": 96,
    "def WelfordReduction.create()": 119,
    "def WhileLoop.create()": 174
  },
  "torch/_inductor/jagged_lowerings.py": {
    "def register_jagged_ops()": 160
  },
  "torch/_inductor/kernel/conv.py": {
    "def convolution()": 239
  },
  "torch/_inductor/kernel/mm.py": {
    "def tuned_addmm()": 151
  },
  "torch/_inductor/loop_body.py": {
    "class CaptureIndexing": 174
  },
  "torch/_inductor/lowering.py": {
    "def avg_pool2d_backward()": 164,
    "def avg_pool3d_backward()": 198,
    "def cat()": 123,
    "def index_put_impl_()": 127,
    "def make_pointwise()": 85,
    "def max_pool2d_with_indices_backward()": 144,
    "def scatter_reduce_()": 114,
    "def sdpa_constraint()": 135,
    "def searchsorted()": 96
  },
  "torch/_inductor/mkldnn_ir.py": {
    "class MkldnnRnnLayer": 116,
    "def MkldnnRnnLayer.create()": 94,
    "def QConvPointWiseBinaryPT2E.create()": 81
  },
  "torch/_inductor/mkldnn_lowerings.py": {
    "def register_onednn_fusion_ops()": 1156
  },
  "torch/_inductor/mock_cache.py": {
    "class PatchCaches": 108
  },
  "torch/_inductor/pattern_matcher.py": {
    "class ReplacementPatternEntry": 202,
    "def ReplacementPatternEntry.replace_with_graph()": 188
  },
  "torch/_inductor/quantized_lowerings.py": {
    "def register_woq_mm_ops()": 116
  },
  "torch/_inductor/runtime/autotune_cache.py": {
    "class AutotuneCache": 201
  },
  "torch/_inductor/runtime/benchmarking.py": {
    "class InductorBenchmarker": 111
  },
  "torch/_inductor/scheduler.py": {
    "class BaseSchedulerNode": 695,
    "class BaseScheduling": 142,
    "class SchedulerBuffer": 106,
    "class SchedulerNode": 268
  },
  "torch/_inductor/select_algorithm.py": {
    "def AlgorithmSelectorCache.log_results()": 108
  },
  "torch/_inductor/utils.py": {
    "class IndentedBuffer": 145
  }
}