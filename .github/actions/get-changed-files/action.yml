name: Get changed files
description: >-
  Returns a space-separated list of changed files for a PR, or '*' when not in a PR.
  Mirrors the logic from the original workflow but packaged as a reusable composite action.

inputs:
  all_files:
    description: 'Whether to return all files instead of just changed files'
    required: false
    default: 'false'

outputs:
  changed-files:
    description: "List of changed files (space-separated) or '*' if not in a PR"
    value: ${{ steps.get-files.outputs.changed-files }}

runs:
  using: composite
  steps:
    - id: get-files
      name: Get changed files (bash)
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        # Call the bundled entrypoint script. Running via bash avoids needing execute bit set.
        # Check if we're in a pull request context
        if [ "${{ github.event_name }}" = "pull_request" ] || [ "${{ github.event_name }}" = "pull_request_target" ]; then
          echo "Running in PR context"

          # Get the PR number from the github context
          PR_NUMBER="${{ github.event.number }}"

          # Check if all_files is requested
          if [ "${{ inputs.all_files }}" = "true" ]; then
            echo "all_files input is true, returning all files"
            echo "changed-files=*" >> "$GITHUB_OUTPUT"
          else
            # Use gh CLI to get changed files in the PR with explicit repo
            CHANGED_FILES=$(gh api repos/${{ github.repository }}/pulls/$PR_NUMBER/files --paginate --jq '.[] | select(.status != "removed") | .filename' | tr '\n' ' ' | sed 's/ $//')

            # See https://github.com/pytorch/pytorch/pull/134215#issuecomment-2332128790
            PYI_FILES_TO_ADD=""
            for file in ${CHANGED_FILES}; do
              if [[ "${file}" == *".pyi.in" ]]; then
                PYI_FILES_TO_ADD="${PYI_FILES_TO_ADD} ${file//.in/}"
              fi
            done
            CHANGED_FILES="${CHANGED_FILES}${PYI_FILES_TO_ADD}"

            if [ -z "$CHANGED_FILES" ]; then
              echo "No changed files found, setting to '*'"
              CHANGED_FILES="*"
            fi

            echo "Changed files: $CHANGED_FILES"
            echo "changed-files=$CHANGED_FILES" >> "$GITHUB_OUTPUT"
          fi

        else
          echo "Not in PR context, setting changed files to '*'"
          echo "changed-files=*" >> "$GITHUB_OUTPUT"
        fi
